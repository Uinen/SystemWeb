<section id="pvcali" class="block">
    <div class="container">
        <div class="row">
            <div class="center-block">
                <div class="header-content">
                    <h4 class="alert-info">Lista di tutti i cali del punto vendita</h4>
                </div>
                @using (Html.BeginForm("PvCali", "User", FormMethod.Get))
                {
                    <div class="grid-filter">
                        <div class="inner">
                            <div class="item">
                                <p class="text-primary">
                                    Cerca per data: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                                    <input type="submit" value="Cerca" />
                                </p>
                            </div>
                        </div>
                        <form id="date-range-form" action="@Url.Action("PvCali", "User")" method="post">
                            <h5 class="alert-info">Compilando il campo sottostante con range in data avente formato <strong>MM/DD/YY</strong>, verrà calcolata la somma dei cali sul impianto in funzione del range selezionato.</h5>
                            <h5 class="alert-info">La Somma è riportata a fondo pagina nella sezione <strong>TOTALI</strong></h5>
                            <div class="item">
                                <label for="from">Data 1</label>
                                <input type="text" id="from" name="dateFrom">
                            </div>
                            <div class="item">
                                <label for="to">Data 2</label>
                                <input type="text" id="to" name="dateTo">
                            </div>
                            <input type='submit' value='Ricerca' />
                        </form>
                    </div>
                }
                <div id="no-more-tables">
                    <h4 class="alert-info">Statistiche</h4>
                    <div id="totali">
                        <table class="col-md-12 table-bordered table-striped table-condensed">
                            @Html.Partial("_TotalPartialCal")
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<section id="adaptive">
    <div class="container">
        <div class="row">
            <div class="center-block">
                <style type="text/css">
                    ::-ms-clear {
                        display: none;

                    }
                    .e-gridAdaptive {
                        border-width: 0px !important;

                    }
                </style>
                                @(Html.EJ().Grid<PvCali>("FlatGridCali")
                                    .Locale("it-IT")
                                    .Datasource(ds => ds.Json((IEnumerable<object>)ViewBag.dataSource)
                                    .UpdateURL("update")
                                    .InsertURL("insert")
                                    .RemoveURL("remove")
                                    .Adaptor(AdaptorType.RemoteSaveAdaptor))
                                    .AllowPaging()
                                    .PageSettings(p => p.PageCount(2).PageSize(10))
                                    .IsResponsive(true)
                                    .EnableResponsiveRow(false)
                                    .AllowSorting()
                                    .AllowMultiSorting()
                                    .ClientSideEvents(eve => eve.ActionComplete("ActionCompleteCali"))
                                    .MinWidth(600)
                                    .EditSettings(d => d.AllowAdding().AllowDeleting().AllowEditing().EditMode(EditMode.ExternalForm))
                                    .ToolbarSettings(toolBar => toolBar.ShowToolbar().ToolbarItems(items =>
                                    {
                                        items.AddTool(ToolBarItems.Add);

                                        items.AddTool(ToolBarItems.Edit);

                                        items.AddTool(ToolBarItems.Delete);

                                        items.AddTool(ToolBarItems.Cancel);

                                        items.AddTool(ToolBarItems.Search);

                                        items.AddTool(ToolBarItems.ExcelExport);

                                        items.AddTool(ToolBarItems.WordExport);

                                        items.AddTool(ToolBarItems.PdfExport);

                                    }))

                                    .AllowFiltering()
                                    .FilterSettings(filter => {
                                        filter.FilterType(FilterType.Excel);
                                    })

                                    .Mappers(map => map.ExportToExcelAction("cali/caliexcell")
                                    .ExportToPdfAction("cali/calipdf")
                                    .ExportToWordAction("cali/caliword"))
                                    .Columns(col =>
                                    {
                                        col.Field(p => p.PvCaliId).HeaderText("ID Calo").IsPrimaryKey(true).Visible(false).Width(45).Add();
                                        col.Field(p => p.PvTankId).HeaderText("Cisterna").ForeignKeyField("PvTankId").ForeignKeyValue("Modello")
                                        .DataSource((IEnumerable<object>)ViewBag.dataSource2).Width(45).EditType(EditingType.Dropdown).Add();

                                        col.Field(p => p.Value).HeaderText("Calo").Width("50").EditType(EditingType.Numeric).Add();
                                        col.Field(p => p.FieldDate).HeaderText("Data").Format("{0:dd/MM/yyyy}").Width("45").EditType(EditingType.Datepicker).Add();
                                    })
                                )
                            </div>
                        </div>
                    </div>
                </section>
@section Scripts{
    @*@Scripts.Render("~/bundles/jqueryval")*@
                @Scripts.Render("~/bundles/GridOption")
<script type="text/javascript">
    ej.Grid.Locale["it-IT"] = {
        EmptyRecord: "Nessun record da visualizzare",
        GroupDropArea: "Trascinare una colonna qui",
        DeleteOperationAlert: "Nessuna voce selezionata per l'eliminazione",
        EditOperationAlert: "Entrate selezionate per operazione di modifica",
        SaveButton: "Salva",
        CancelButton: "Annulla",
        EditFormTitle: "Modifica",
        GroupCaptionFormat: "{{:field}}: {{:key}} - {{:count}} {{if count == 1}}Oggetto{{else}}Oggetti{{/if}}",
        UnGroup: "Clicca qui per separare"
    };
    ej.Pager.Locale["it-IT"] = {
        pagerInfo: "{0} di {1} Pagine ({2} Oggetti)",
        firstPageTooltip: "Per la prima pagina",
        lastPageTooltip: "L'ultima pagina",
        nextPageTooltip: "Pagina successiva",
        previousPageTooltip: "Pagina precedente",
        nextPagerTooltip: "Alla prossima pagina",
        previousPagerTooltip: "Pagina precedente"
    };
    </script>
}


