@model UserProfiles
@{
    Layout = "~/Views/Shared/_EditProfiles.cshtml";
}
@section style{
    @Styles.Render("~/Content/bootstrapV3")
}
@using (Html.BeginForm("EditProfiles", "User", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Modifica il tuo profilo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProfileId)

        <div class="form-group">
            @Html.LabelFor(model => model.ProfileAdress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProfileAdress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProfileAdress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfileCity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProfileCity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProfileCity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfileNation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProfileNation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProfileNation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProfileZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProfileZipCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProfileZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.UsersImage.Any(f => f.FileType == FileType.Avatar))
                {
            <div class="form-group">
                <span class="control-label col-md-2"><strong>La tua immagine</strong></span>
                <div class="col-md-10">
                    <img src="~/UsersImage?id=@Model.UsersImage.Single(f => f.FileType == FileType.Avatar && f.ProfileID == f.UserProfiles.ProfileId).UsersImageID" alt="avatar" style="width:140px; height:140px" />
                </div>
            </div>
        }

        <div class="form-group">
            @Html.Label("Avatar", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="Avatar" name="upload" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salva modifiche" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@section script {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrapV3")
    @Scripts.Render("~/bundles/jqueryeasing")
    @Scripts.Render("~/bundles/jsrender")
    @Scripts.Render("~/bundles/jqueryglobalize")
    @Scripts.Render("~/bundles/jquerybrowser")
    @Scripts.Render("https://cdn.syncfusion.com/15.1.0.33/js/web/ej.web.all.min.js")
    @Scripts.Render("~/bundles/jqueryval")
    @Html.EJ().ScriptManager()
}
