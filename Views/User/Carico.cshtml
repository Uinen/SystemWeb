@*
    @model PagedList.IPagedList<SystemWeb.Models.Carico>
    @using PagedList.Mvc;
    <link href="~/Contenuti/css/PagedList.min.css" rel="stylesheet" type="text/css" />*@

    @{
        ViewBag.Title = "Carico carburante";
    }
@using (Html.BeginForm("Carico", "User", FormMethod.Get))
{

    <section id="carico" class="block">
        <div class="container">
            <div class="row">
                <div class="center-block">
                    <div class="header-content">
                        <h4 class="alert alert-info">Lista di tutti gli ordini registrati sul impianto</h4>
                        <strong>Genera</strong>
                        @Html.ActionLink("Diagramma", "CaricoChart")
                    </div>
                    <div class="grid-filter">
                        <form id="date-range-form" action="@Url.Action("Carico", "User")" method="post">
                            <h5 class="alert-info">Compilando il campo sottostante con range in data avente formato <strong>MM/DD/YY</strong>, verrà calcolata la somma degli ordini registrati sul impianto in funzione del range selezionato.</h5>
                            <h5 class="alert-info">La Somma è riportata a fondo pagina nella sezione <strong>TOTALI</strong></h5>
                            <div class="item">
                                <label for="from">Data 1</label>
                                <input type="text" id="from" name="dateFrom">
                            </div>
                            <div class="item">
                                <label for="to">Data 2</label>
                                <input type="text" id="to" name="dateTo">
                            </div>
                            <input type='submit' value='Ricerca' />
                        </form>
                    </div>
                    <div id="no-more-tables">
                        <h4 class="alert-info">Totale di tutti gli ordini registrati sul impianto</h4>
                        <div id="totali">
                            <table class="col-md-12 table-bordered table-striped table-condensed">
                                @Html.Partial("_TotalPartial")
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
<section id="adaptive">
    <style type="text/css">
        ::-ms-clear {
            display: none;
        }

        .e-gridAdaptive {
            border-width: 0px !important;
        }
    </style>

    <script type="text/javascript">
                    $(function () {
                        var browserDetails = ej.browserInfo();
                        if (!(browserDetails.name == "msie" && parseInt(browserDetails.version, 10) < 9)) {
                            window.addEventListener('message', function (e) {
                                var gridObj = $("#FlatGrid").data('ejGrid');
                                $("#FlatGrid").ejGrid("model.enableResponsiveRow", false);
                                var obj = $("#FlatGrid").ejGrid("instance");
                                if (e.data == "mobile") {
                                    $('body').css('margin', '0px');
                                    $('body').css('width', '100%');
                                    gridObj.phoneMode = true;
                                    $("#FlatGrid").ejGrid("model.scrollSettings.height", "100%");
                                    $("#FlatGrid").ejGrid("model.pageSettings.pageSize", 10);
                                    if (gridObj.model.isEdit)
                                        gridObj.cancelEdit();
                                    $("#Grid").addClass('e-gridAdaptive');
                                }
                                else if (e.data == "desktop") {
                                    $('body').css('margin-right', '1%');
                                    $('body').css('width', '99%');
                                    $("#FlatGrid").ejGrid("model.pageSettings.pageSize", 7)
                                    gridObj.windowonresize();
                                }
                                if (typeof e.data == "boolean") {
                                    if (obj.model.isEdit)
                                        obj.cancelEdit();
                                    $("#FlatGrid").ejGrid("model.enableResponsiveRow", e.data);
                                    if (e.data) {
                                        $('body').css('overflow', 'visible');
                                        $('body').css('overflow-x', 'hidden');
                                    }
                                    else {
                                        $("#FlatGrid").ejGrid("model.pageSettings.pageSize", 10)
                                        $('body').css('overflow', 'hidden');
                                    }
                                }
                                else
                                    changeTheme();
                            });
                            window.onload = function () {
                                changeTheme();
                            }
                        }
                    });
                    function ActionComplete(args) {
                        var gridObj = $("#FlatGrid").ejGrid("instance");
                        this.getContent().addClass("e-widget");
                        var browserDetails = gridObj.getBrowserDetails();
                        if (browserDetails.browser == "msie" && parseInt(browserDetails.version, 10) <= 9)
                            $("#FlatGrid").ejGrid("model.enableResponsiveRow", false);
                        if (args.requestType == "filtering" || args.requestType == "searching") {
                            var proxy = this;
                            setTimeout(function () { proxy.windowonresize(); }, 30);
                        }
                    }
                    function changeTheme() {
                        var links = $(document.head || document.getElementsByTagName('head')[0]).find("link");
                        for (var i = 0; i < links.length; i++) {
                            if (links[i].href.indexOf("ej.theme.min.css") != -1) {
                                var cssref = links[i].href,
                                    serverconfig = cssref.substr(0, cssref.indexOf("Content") - 1), fileref, theme;
                                theme = window.parent.themes[window.parent.theme]
                                fileref = $('<link rel="stylesheet" type="text/css" href="' + serverconfig + theme + '" />');
                                $(fileref).insertAfter(links[i]);
                                $(links[i]).remove();
                                break;
                            }
                        }
                    }
    </script>

    @(Html.EJ().Grid<Carico>("FlatGrid")
                    .Datasource(ds => ds.URL("CaricoGetData")
                    .InsertURL("PerformInsert")
                    .UpdateURL("PerformUpdate")
                    .RemoveURL("PerformDelete")
                    .Adaptor(AdaptorType.UrlAdaptor)
                    )
                    .AllowPaging()
                    .PageSettings(p => p.PageCount(10).PageSize(10))
                    .IsResponsive(true)
                    .EnableResponsiveRow(false)
                    .AllowSorting()
                    .AllowFiltering()
                    .FilterSettings(filter => filter.FilterType(FilterType.FilterBar).FilterBarMode(FilterBarMode.OnEnter))
                    .AllowMultiSorting()
                    .ClientSideEvents(eve => eve.ActionComplete("ActionComplete"))
                    .MinWidth(600)
                    .EditSettings(e => e.AllowEditing()
                    .AllowDeleting()
                    .EditMode(EditMode.Normal)
                                )
                                .ToolbarSettings(tool => tool.ShowToolbar().ToolbarItems(item =>
                                {
                                    item.AddTool(ToolBarItems.Add);
                                    item.AddTool(ToolBarItems.Edit);
                                    item.AddTool(ToolBarItems.Delete);
                                    item.AddTool(ToolBarItems.Update);
                                    item.AddTool(ToolBarItems.Cancel);
                                }))
                                .Columns(col =>
                                {
                                    col.Field("pvID").HeaderText("Punto Vendita").ForeignKeyField("pvID").ForeignKeyValue("pvName")
                                    .DataSource((IEnumerable<object>)ViewBag.dataSource2).TextAlign(TextAlign.Left).Width(100).Add();

                                    col.Field(p => p.yearId).HeaderText("Anno Finanziario").ForeignKeyField("yearId").ForeignKeyValue("Anno")
                                    .DataSource((IEnumerable<object>)ViewBag.dataSource3).TextAlign(TextAlign.Left).Width(75).Add();

                                    col.Field(p => p.Ordine).HeaderText("Ordine").Width("50").Add();
                                    col.Field(p => p.cData).HeaderText("Scarico").Width("45").Add();
                                    col.Field(p => p.Documento).HeaderText("Tipo").Width("50").Add();
                                    col.Field(p => p.Numero).HeaderText("Documento").Width("65").Add();
                                    col.Field(p => p.rData).HeaderText("Bolla").Width("45").Add();
                                    col.Field(p => p.Emittente).HeaderText("Emittente").Width("75").Add();
                                    col.Field(p => p.Benzina).HeaderText("Benzina").Width("50").Add();
                                    col.Field(p => p.Gasolio).HeaderText("Gasolio").Width("50").Add();
                                    col.Field(p => p.Note).HeaderText("Note").Width("50").Add();
                                })
    )
</section>

    @section Scripts{
        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript">

            $(function () {
                $("#from").ejDatePicker({
                    onClose: function (selectedDate) {
                        $("#to").ejDatePicker(@*"option",*@ "minDate", selectedDate);

                    }
                });
                $("#to").ejDatePicker({
                    onClose: function (selectedDate) {
                        $("#from").ejDatePicker(@*"option",*@ "maxDate", selectedDate);

                    },
                });
            });
        </script>
    }
