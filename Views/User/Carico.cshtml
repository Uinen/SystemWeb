@using (Html.BeginForm("Carico", "User", FormMethod.Get))
{
    <section id="carico" class="block">
        <div class="container">
            <div class="row">
                <div class="center-block">
                    <div class="header-content">
                        <h4 class="alert alert-info">Lista di tutti gli ordini registrati sul impianto</h4>
                        <strong>Genera</strong>
                        @Html.ActionLink("Diagramma", "CaricoChart")
                    </div>
                    <div class="grid-filter">
                        <form id="date-range-form" action="@Url.Action("Carico", "User")" method="post">
                            <h5 class="alert-info">Compilando il campo sottostante con range in data avente formato <strong>MM/DD/YY</strong>, verrà calcolata la somma degli ordini registrati sul impianto in funzione del range selezionato.</h5>
                            <h5 class="alert-info">La Somma è riportata a fondo pagina nella sezione <strong>TOTALI</strong></h5>
                            <div class="item">
                                <label for="from">Data 1</label>
                                <input type="text" id="from" name="dateFrom">
                            </div>
                            <div class="item">
                                <label for="to">Data 2</label>
                                <input type="text" id="to" name="dateTo">
                            </div>
                            <input type='submit' value='Ricerca' />
                        </form>
                    </div>
                    <div id="no-more-tables">
                        <h4 class="alert-info">Totale di tutti gli ordini registrati sul impianto</h4>
                        <div id="totali">
                            <table class="col-md-12 table-bordered table-striped table-condensed">
                                @Html.Partial("_TotalPartial")
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
<section id="adaptive">
    <div class="container">
        <div class="row">
            <div class="center-block">
                <style type="text/css">
                    ::-ms-clear {
                        display: none;
                    }

                    .e-gridAdaptive {
                        border-width: 0px !important;
                    }
                </style>

                <script type="text/javascript">
                    function ActionComplete(args, sender) {
                        var gridObj = $("#FlatGrid").ejGrid("instance");
                        this.getContent().addClass("e-widget");
                        var browserDetails = gridObj.getBrowserDetails();
                        if (browserDetails.browser == "msie" && parseInt(browserDetails.version, 10) <= 9)
                            $("#FlatGrid").ejGrid("model.enableResponsiveRow", false);
                        if (args.requestType == "filtering" || args.requestType == "searching") {
                            var proxy = this;
                            setTimeout(function () { proxy.windowonresize(); }, 30);
                        }

                        if (args.requestType == "BeginEdit") {

                            var date = $("#" + sender._ID + "cData" + "rData").val();

                            $("#" + sender._ID + "cData" + "rData").val($.ejDatePicker.formatDate("mm/dd/yy", new Date(date)));

                        }
                    }

                </script>

                @(Html.EJ().Grid<CaricoDto>("FlatGrid")
                    .Datasource(ds => ds.URL("carico/caricogetdata")
                    .BatchURL("carico/batchupdate")
                    .Adaptor(AdaptorType.UrlAdaptor))

                    .AllowPaging()
                    .EnableAltRow()
                    .PageSettings(p => p.PageCount(2).PageSize(10))
                    .IsResponsive(true)
                    .EnableResponsiveRow(false)
                    .AllowSorting()
                    //.AllowFiltering()
                    //.FilterSettings(filter => filter.FilterType(FilterType.FilterBar).FilterBarMode(FilterBarMode.OnEnter))
                    .AllowMultiSorting()
                    .ClientSideEvents(eve => eve.ActionComplete("ActionComplete"))
                    .MinWidth(600)
                    .EditSettings(d => d.AllowAdding(false).AllowDeleting(true).AllowEditing(true).EditMode(EditMode.InlineForm))
                    .ToolbarSettings(toolbar =>
                    {
                        toolbar.ShowToolbar().ToolbarItems(items =>
                        {
                            items.AddTool(ToolBarItems.Edit);
                            items.AddTool(ToolBarItems.Delete);
                            items.AddTool(ToolBarItems.Update);
                            items.AddTool(ToolBarItems.Cancel);
                            //items.AddTool(ToolBarItems.Search);
                        });
                    })
                    .Columns(col =>
                    {
                        col.Field(p => p.Id).HeaderText("ID Ordine").IsPrimaryKey(true).Visible(false).Add();

                        col.Field(p => p.pvName).HeaderText("Punto Vendita")//.ForeignKeyField("pvID").ForeignKeyValue("pvName")
                        .DataSource((List<object>)ViewData["PVID"]).TextAlign(TextAlign.Left).Width(100).EditType(EditingType.Dropdown).Add();

                        col.Field(p => p.yearId).HeaderText("Anno")//.ForeignKeyField("yearId").ForeignKeyValue("Anno")
                        .DataSource((List<object>)ViewData["YearID"]).TextAlign(TextAlign.Left).Width(75).EditType(EditingType.Dropdown).Add();

                        col.Field(p => p.Ordine).HeaderText("Ordine").Width("50").Add();
                        col.Field(p => p.cData).HeaderText("Scarico").Format("{0:MM/dd/yyyy}").Width("45").EditType(EditingType.Datepicker).Add();
                        col.Field(p => p.Documento).HeaderText("Tipo").Width("50").Add();
                        col.Field(p => p.Numero).HeaderText("Documento").Width("65").Add();
                        col.Field(p => p.rData).HeaderText("Bolla").Format("{0:MM/dd/yyyy}").Width("45").EditType(EditingType.Datepicker).Add();
                        col.Field(p => p.Emittente).HeaderText("Emittente").Width("75").Add();
                        col.Field(p => p.Benzina).HeaderText("Benzina").Width("50").Add();
                        col.Field(p => p.Gasolio).HeaderText("Gasolio").Width("50").Add();
                        col.Field(p => p.Note).HeaderText("Note").Width("50").Add();
                    })
                )
            </div>
        </div>
    </div>
</section>
            @section Scripts{
                @Scripts.Render("~/bundles/jqueryval")
                <script type="text/javascript">

                    $(function () {
                        $("#from").ejDatePicker({
                            onClose: function (selectedDate) {
                                $("#to").ejDatePicker(@*"option",*@ "minDate", selectedDate);

                            }
                        });
                        $("#to").ejDatePicker({
                            onClose: function (selectedDate) {
                                $("#from").ejDatePicker(@*"option",*@ "maxDate", selectedDate);

                            },
                        });
                    });
                </script>
            }


